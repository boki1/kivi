<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d1/da8/namespaceargparse_1_1detail" kind="namespace" language="C++">
    <compoundname>argparse::detail</compoundname>
    <innerclass refid="df/d5e/structargparse_1_1detail_1_1is__vector" prot="public">argparse::detail::is_vector</innerclass>
    <innernamespace refid="d2/d23/namespaceargparse_1_1detail_1_1is__vector__impl">argparse::detail::is_vector_impl</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a4cd8a1db69d1f7ee9e95bf1b0365c9ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool argparse::detail::_not_space</definition>
        <argsstring>(int ch)</argsstring>
        <name>_not_space</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="26" column="20" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1ac19daac8110a57ca5a7ed2c80db82778" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void argparse::detail::_ltrim</definition>
        <argsstring>(std::string &amp;s, bool(*f)(int)=_not_space)</argsstring>
        <name>_ltrim</name>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool(*)(int)</type>
          <declname>f</declname>
          <defval>_not_space</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="27" column="20" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a381b04549a5d80a43ecc975db6ddd229" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void argparse::detail::_rtrim</definition>
        <argsstring>(std::string &amp;s, bool(*f)(int)=_not_space)</argsstring>
        <name>_rtrim</name>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool(*)(int)</type>
          <declname>f</declname>
          <defval>_not_space</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="30" column="20" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a765f973749bebbf808e9bb6b08fb27ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void argparse::detail::_trim</definition>
        <argsstring>(std::string &amp;s, bool(*f)(int)=_not_space)</argsstring>
        <name>_trim</name>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool(*)(int)</type>
          <declname>f</declname>
          <defval>_not_space</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="33" column="20" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a44b8fb042f59b4372373b281bdb8c84e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string argparse::detail::_ltrim_copy</definition>
        <argsstring>(std::string s, bool(*f)(int)=_not_space)</argsstring>
        <name>_ltrim_copy</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool(*)(int)</type>
          <declname>f</declname>
          <defval>_not_space</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="37" column="27" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a16cf758077ae7a7e499e4e0234654b6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string argparse::detail::_rtrim_copy</definition>
        <argsstring>(std::string s, bool(*f)(int)=_not_space)</argsstring>
        <name>_rtrim_copy</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool(*)(int)</type>
          <declname>f</declname>
          <defval>_not_space</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="42" column="27" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1abc5de641874a821048fb6374bf90bf66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string argparse::detail::_trim_copy</definition>
        <argsstring>(std::string s, bool(*f)(int)=_not_space)</argsstring>
        <name>_trim_copy</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool(*)(int)</type>
          <declname>f</declname>
          <defval>_not_space</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="47" column="27" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a469c8a544d0b4eeeb1637ffbb28fa071" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIt</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>static std::string argparse::detail::_join</definition>
        <argsstring>(InputIt begin, InputIt end, const std::string &amp;separator=&quot; &quot;)</argsstring>
        <name>_join</name>
        <param>
          <type>InputIt</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>separator</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="53" column="27" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="53" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a628c2c9f7e926753843053609517d808" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool argparse::detail::_is_number</definition>
        <argsstring>(const std::string &amp;arg)</argsstring>
        <name>_is_number</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="65" column="20" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1a60c0ac357553e8a47b2094c6c6c0c5ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int argparse::detail::_find_equal</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>_find_equal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="72" column="19" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="72" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="d1/da8/namespaceargparse_1_1detail_1abaf10b523144213b3ca5de7d76d78c79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t argparse::detail::_find_name_end</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>_find_name_end</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="89" column="22" bodyfile="/home/boki/.tmp/kivi/extern/argparse/argparse.h" bodystart="89" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/boki/.tmp/kivi/extern/argparse/argparse.h" line="25" column="1"/>
  </compounddef>
</doxygen>
