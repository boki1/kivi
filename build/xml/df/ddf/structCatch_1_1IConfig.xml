<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="df/ddf/structCatch_1_1IConfig" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>Catch::IConfig</compoundname>
    <basecompoundref refid="dc/d1c/classCatch_1_1NonCopyable" prot="public" virt="non-virtual">Catch::NonCopyable</basecompoundref>
    <includes refid="df/dbf/catch2_8hpp" local="no">catch2.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1adadf7c57478e4b0c83bea5b38d2dbc87" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Catch::IConfig::~IConfig</definition>
        <argsstring>()</argsstring>
        <name>~IConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4507" column="17"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1aadb95f849359de1e6eb915aab063e542" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::allowThrows</definition>
        <argsstring>() const =0</argsstring>
        <name>allowThrows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4509" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1aa4c3fe0825e7e6ebdcfa6abc7abf3617" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::ostream &amp;</type>
        <definition>virtual std::ostream&amp; Catch::IConfig::stream</definition>
        <argsstring>() const =0</argsstring>
        <name>stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4510" column="30"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1aa2315800a05c19db71518b1edc39d43b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string Catch::IConfig::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4511" column="29"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a2f1b0391019b9ce69921527a684eab23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::includeSuccessfulResults</definition>
        <argsstring>() const =0</argsstring>
        <name>includeSuccessfulResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4512" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a5b886c5aad9001e90f63a7cf0726af63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::shouldDebugBreak</definition>
        <argsstring>() const =0</argsstring>
        <name>shouldDebugBreak</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4513" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a75d970c495a28e46b8e9b04a1d32149f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::warnAboutMissingAssertions</definition>
        <argsstring>() const =0</argsstring>
        <name>warnAboutMissingAssertions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4514" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a30590623e3918825f2896c2262bf6fe3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::warnAboutNoTests</definition>
        <argsstring>() const =0</argsstring>
        <name>warnAboutNoTests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4515" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a363f3388a439d02217f37198eff96744" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Catch::IConfig::abortAfter</definition>
        <argsstring>() const =0</argsstring>
        <name>abortAfter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4516" column="21"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1aa288bf92ccd0aafd85409d8aefdf738c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::showInvisibles</definition>
        <argsstring>() const =0</argsstring>
        <name>showInvisibles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4517" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1abaa97d281484278291f0d3db6d404aeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d0/d82/structCatch_1_1ShowDurations_1a82fa0174554187220c1eda175f122ee1" kindref="member">ShowDurations::OrNot</ref></type>
        <definition>virtual ShowDurations::OrNot Catch::IConfig::showDurations</definition>
        <argsstring>() const =0</argsstring>
        <name>showDurations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4518" column="38"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a160c6f6e19ed6ae946f7a9e737099189" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Catch::IConfig::minDuration</definition>
        <argsstring>() const =0</argsstring>
        <name>minDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4519" column="24"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a03a2fd8221d896d12bf3684ab2a03588" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>TestSpec const  &amp;</type>
        <definition>virtual TestSpec const&amp; Catch::IConfig::testSpec</definition>
        <argsstring>() const =0</argsstring>
        <name>testSpec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4520" column="32"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a49a475bbeb3180c06799d6d958914649" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::hasTestFilters</definition>
        <argsstring>() const =0</argsstring>
        <name>hasTestFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4521" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a1b8a299344a493eb98c12faae48421d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt; const  &amp;</type>
        <definition>virtual std::vector&lt;std::string&gt; const&amp; Catch::IConfig::getTestsOrTags</definition>
        <argsstring>() const =0</argsstring>
        <name>getTestsOrTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4522" column="35"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a0fc59c9aba1d4018538d5526daa5eb78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d0/d97/structCatch_1_1RunTests_1ab56bd851b1dd085869992d1a9d73dc5d" kindref="member">RunTests::InWhatOrder</ref></type>
        <definition>virtual RunTests::InWhatOrder Catch::IConfig::runOrder</definition>
        <argsstring>() const =0</argsstring>
        <name>runOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4523" column="39"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1ae049eb45979d841073fa65d1094c7f14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int Catch::IConfig::rngSeed</definition>
        <argsstring>() const =0</argsstring>
        <name>rngSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4524" column="30"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a87ec19a6b486eb5b5015cf7738fee026" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d7a/structCatch_1_1UseColour_1a6aa78da0c2de7539bb9e3757e204a3f1" kindref="member">UseColour::YesOrNo</ref></type>
        <definition>virtual UseColour::YesOrNo Catch::IConfig::useColour</definition>
        <argsstring>() const =0</argsstring>
        <name>useColour</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4525" column="36"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1afc801995e115557f90e41f3d6e96908d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt; const  &amp;</type>
        <definition>virtual std::vector&lt;std::string&gt; const&amp; Catch::IConfig::getSectionsToRun</definition>
        <argsstring>() const =0</argsstring>
        <name>getSectionsToRun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4526" column="35"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a55aff5924bdbb3f558775821b1eb4b3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d8/d39/namespaceCatch_1af85c0d46dfe687d923a157362fd07737" kindref="member">Verbosity</ref></type>
        <definition>virtual Verbosity Catch::IConfig::verbosity</definition>
        <argsstring>() const =0</argsstring>
        <name>verbosity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4527" column="27"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1aa9aa1eafdbe510e27bf319233969ee2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IConfig::benchmarkNoAnalysis</definition>
        <argsstring>() const =0</argsstring>
        <name>benchmarkNoAnalysis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4529" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a583734a61796b495b80779a6540eb6cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Catch::IConfig::benchmarkSamples</definition>
        <argsstring>() const =0</argsstring>
        <name>benchmarkSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4530" column="21"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1ae1ec73d460a2b58c7c9b022a430a34dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Catch::IConfig::benchmarkConfidenceInterval</definition>
        <argsstring>() const =0</argsstring>
        <name>benchmarkConfidenceInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4531" column="24"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a3b8e5581be01f4773593f8b85eb7db98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int Catch::IConfig::benchmarkResamples</definition>
        <argsstring>() const =0</argsstring>
        <name>benchmarkResamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4532" column="30"/>
      </memberdef>
      <memberdef kind="function" id="df/ddf/structCatch_1_1IConfig_1a516879e39f2e46f69bb4ef1f1fe7023c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::chrono::milliseconds</type>
        <definition>virtual std::chrono::milliseconds Catch::IConfig::benchmarkWarmupTime</definition>
        <argsstring>() const =0</argsstring>
        <name>benchmarkWarmupTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4533" column="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Catch::NonCopyable</label>
        <link refid="dc/d1c/classCatch_1_1NonCopyable"/>
      </node>
      <node id="1">
        <label>Catch::IConfig</label>
        <link refid="df/ddf/structCatch_1_1IConfig"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Catch::NonCopyable</label>
        <link refid="dc/d1c/classCatch_1_1NonCopyable"/>
      </node>
      <node id="1">
        <label>Catch::IConfig</label>
        <link refid="df/ddf/structCatch_1_1IConfig"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" line="4505" column="5" bodyfile="/home/boki/.tmp/kivi/extern/catch2/catch2.hpp" bodystart="4505" bodyend="4534"/>
    <listofallmembers>
      <member refid="df/ddf/structCatch_1_1IConfig_1a363f3388a439d02217f37198eff96744" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>abortAfter</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1aadb95f849359de1e6eb915aab063e542" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>allowThrows</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1ae1ec73d460a2b58c7c9b022a430a34dd" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>benchmarkConfidenceInterval</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1aa9aa1eafdbe510e27bf319233969ee2c" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>benchmarkNoAnalysis</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a3b8e5581be01f4773593f8b85eb7db98" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>benchmarkResamples</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a583734a61796b495b80779a6540eb6cc" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>benchmarkSamples</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a516879e39f2e46f69bb4ef1f1fe7023c" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>benchmarkWarmupTime</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1afc801995e115557f90e41f3d6e96908d" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>getSectionsToRun</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a1b8a299344a493eb98c12faae48421d7" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>getTestsOrTags</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a49a475bbeb3180c06799d6d958914649" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>hasTestFilters</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a2f1b0391019b9ce69921527a684eab23" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>includeSuccessfulResults</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a160c6f6e19ed6ae946f7a9e737099189" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>minDuration</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1aa2315800a05c19db71518b1edc39d43b" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>name</name></member>
      <member refid="dc/d1c/classCatch_1_1NonCopyable_1a74cf3e4aa051c284941e39b436b2f693" prot="private" virt="non-virtual"><scope>Catch::IConfig</scope><name>NonCopyable</name></member>
      <member refid="dc/d1c/classCatch_1_1NonCopyable_1a09d1d8775db8c495fa40c285b034faa3" prot="private" virt="non-virtual"><scope>Catch::IConfig</scope><name>NonCopyable</name></member>
      <member refid="dc/d1c/classCatch_1_1NonCopyable_1a4b492dd5753f9952350fb64dc6cb9fe2" prot="protected" virt="non-virtual"><scope>Catch::IConfig</scope><name>NonCopyable</name></member>
      <member refid="dc/d1c/classCatch_1_1NonCopyable_1a958b5f57d45fdd6f418bec8b46a629ab" prot="private" virt="non-virtual"><scope>Catch::IConfig</scope><name>operator=</name></member>
      <member refid="dc/d1c/classCatch_1_1NonCopyable_1a317697b6d3c4cda093666ce61d3a1e31" prot="private" virt="non-virtual"><scope>Catch::IConfig</scope><name>operator=</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1ae049eb45979d841073fa65d1094c7f14" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>rngSeed</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a0fc59c9aba1d4018538d5526daa5eb78" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>runOrder</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a5b886c5aad9001e90f63a7cf0726af63" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>shouldDebugBreak</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1abaa97d281484278291f0d3db6d404aeb" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>showDurations</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1aa288bf92ccd0aafd85409d8aefdf738c" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>showInvisibles</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1aa4c3fe0825e7e6ebdcfa6abc7abf3617" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>stream</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a03a2fd8221d896d12bf3684ab2a03588" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>testSpec</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a87ec19a6b486eb5b5015cf7738fee026" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>useColour</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a55aff5924bdbb3f558775821b1eb4b3d" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>verbosity</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a75d970c495a28e46b8e9b04a1d32149f" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>warnAboutMissingAssertions</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1a30590623e3918825f2896c2262bf6fe3" prot="public" virt="pure-virtual"><scope>Catch::IConfig</scope><name>warnAboutNoTests</name></member>
      <member refid="df/ddf/structCatch_1_1IConfig_1adadf7c57478e4b0c83bea5b38d2dbc87" prot="public" virt="virtual"><scope>Catch::IConfig</scope><name>~IConfig</name></member>
      <member refid="dc/d1c/classCatch_1_1NonCopyable_1a81254677280fef337eb4a676e91e3293" prot="protected" virt="virtual"><scope>Catch::IConfig</scope><name>~NonCopyable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
