<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d4/d99/expressions_8cc" kind="file" language="C++">
    <compoundname>expressions.cc</compoundname>
    <includes local="no">memory</includes>
    <includes refid="d4/d91/syntactical__structures_8hh" local="yes">syntactical_structures.hh</includes>
    <incdepgraph>
      <node id="3">
        <label>syntactical_structures.hh</label>
        <link refid="d4/d91/syntactical__structures_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>variant</label>
      </node>
      <node id="1">
        <label>/home/boki/.tmp/kivi/frontend/parser/expressions.cc</label>
        <link refid="d4/d99/expressions_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="4">
        <label>syntax.hh</label>
        <link refid="d9/d1c/syntax_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>optional</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d7/df6/namespacesyntax__analyzer">syntax_analyzer</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="d4/d99/expressions_8cc_1abc4033382dfb3ae0da0c0bb78c4d376a" prot="public" static="no">
        <name>_KIVI_PARSER_EXPRESSIONS_HH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/expressions.cc" line="7" column="9" bodyfile="/home/boki/.tmp/kivi/frontend/parser/expressions.cc" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements &quot;constructors&quot; for all expressions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_KIVI_PARSER_EXPRESSIONS_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_KIVI_PARSER_EXPRESSIONS_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d91/syntactical__structures_8hh" kindref="compound">syntactical_structures.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::make_shared;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::move;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="d7/df6/namespacesyntax__analyzer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d7/df6/namespacesyntax__analyzer" kindref="compound">syntax_analyzer</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a1d4c1dff621569f3ff750a14d3e96b81" kindref="member">number_literal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(num);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a6ee3dc0764d8a21cc27f1902a5a1cb30" kindref="member">string_literal</ref>(std::string&amp;&amp;<sp/>str)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(move(str));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a1d881d7931a6966be2147e9e4c073b92" kindref="member">identifier_expr</ref>(<ref refid="d1/d9f/classsyntax__analyzer_1_1identifier" kindref="compound">identifier</ref>&amp;&amp;<sp/>ident)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(move(ident));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a533a85533b9d2a8153e079761e35d4d0" kindref="member">nop_expr</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024ab7e7f2b46723f5b08d763041108f8fed" kindref="member">expression::type::Nop</ref>,<sp/>{});</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a78cb9dbcef41ae49f90453430aaec225" kindref="member">negation_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>operand)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024ac3feba4aa480f4c127c08c370d23415f" kindref="member">expression::type::Negation</ref>,<sp/>{<sp/>move(operand)<sp/>});</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a9ad6a484094a248f6ecd58dadfed6781" kindref="member">addition_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>lhs,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a7c5531bbefed0945814f874baf9e0e0f" kindref="member">expression::type::Addition</ref>,<sp/>{<sp/>move(lhs),<sp/>move(rhs)<sp/>});</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a7082e93e3a478dc5181fa85e1dc044df" kindref="member">multiplication_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>lhs,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a27d1a1f7b7c2180e5b20ce9e3d00e2dd" kindref="member">expression::type::Multiplication</ref>,<sp/>{<sp/>move(lhs),<sp/>move(rhs)<sp/>});</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a3ea046a3281d3216884f66d2a9a2ed82" kindref="member">modular_division_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>lhs,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a7d9c9c3399200231f7bbfcf6d50f0ea1" kindref="member">expression::type::ModularDivision</ref>,<sp/>{<sp/>move(lhs),<sp/>move(rhs)<sp/>});</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a65910b168b44811d9ec858eb947f17fe" kindref="member">division_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>lhs,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a3025cdaab2deb0bb2cd642449e570833" kindref="member">expression::type::Division</ref>,<sp/>{<sp/>move(lhs),<sp/>move(rhs)<sp/>});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a678818cf55653245ebda81825461d3b6" kindref="member">equality_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>lhs,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a890ebf2ce6beb154deb673b3af2d03d4" kindref="member">expression::type::Equality</ref>,<sp/>{<sp/>move(lhs),<sp/>move(rhs)<sp/>});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1ae1a82efed5e7647f5c6d8243a38c1478" kindref="member">inequality_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>lhs,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eq<sp/>=<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a890ebf2ce6beb154deb673b3af2d03d4" kindref="member">expression::type::Equality</ref>,<sp/>{<sp/>move(lhs),<sp/>move(rhs)<sp/>});</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a890ebf2ce6beb154deb673b3af2d03d4" kindref="member">expression::type::Equality</ref>,<sp/>{<sp/>eq,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(0)<sp/>});</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a88c8eb005118819f7d76280a32a08024" kindref="member">assignment_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>lhs,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(lhs).<ref refid="db/df3/classsyntax__analyzer_1_1expression_1adee71448d9680556400d1f02388a44db" kindref="member">assign</ref>(move(rhs));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a25e672e5808f12eb55b01e892b1022a8" kindref="member">function_call_expr</ref>(std::string&amp;&amp;<sp/>fun_name,<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>parameter_list<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>{}<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="d1/d9f/classsyntax__analyzer_1_1identifier" kindref="compound">identifier</ref>(<ref refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177a86408593c34af77fdd90df932f8b5261" kindref="member">identifier::type::Function</ref>,<sp/>move(fun_name)));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024affb017548928ab2305e7c55cb67c04ca" kindref="member">expression::type::FunctionCall</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move(parameter_list</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.add_operand(name)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.operands_copy()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df6/namespacesyntax__analyzer_1a7847e2850e81c45dffa4bb57a8c5b47c" kindref="member">sequence_expr</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>&amp;&amp;<sp/>first)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref>(<ref refid="db/df3/classsyntax__analyzer_1_1expression_1acb9c461ee7ac7375e51d5ffdd3896024a3ff39d3acb327553070a64ef0cb321d5" kindref="member">expression::type::Sequence</ref>,<sp/>{<sp/>move(first)<sp/>});</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//_KIVI_PARSER_EXPRESSIONS_HH</highlight></codeline>
    </programlisting>
    <location file="/home/boki/.tmp/kivi/frontend/parser/expressions.cc"/>
  </compounddef>
</doxygen>
