<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/d6c/codes_8cc" kind="file" language="C++">
    <compoundname>codes.cc</compoundname>
    <includes refid="db/db5/ir__code_8hh" local="yes">ir_code.hh</includes>
    <includes refid="dd/dcd/generation__unit_8hh" local="yes">generation_unit.hh</includes>
    <incdepgraph>
      <node id="11">
        <label>parser/syntax.hh</label>
        <link refid="d9/d1c/syntax_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>variant</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="2">
        <label>ir_code.hh</label>
        <link refid="db/db5/ir__code_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string_view</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="9">
        <label>generation_unit.hh</label>
        <link refid="dd/dcd/generation__unit_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="1">
        <label>/home/boki/KIVI/frontend/ir_generation/codes.cc</label>
        <link refid="dc/d6c/codes_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d5/d90/namespaceintermediate__representation">intermediate_representation</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" prot="public" static="no">
        <type><ref refid="d1/dc9/classintermediate__representation_1_1tac_1abfcc782036a2cfe2a8fdbded6c4c95a6" kindref="member">ir::tac::operands_type</ref></type>
        <definition>using opers_type =  ir::tac::operands_type</definition>
        <argsstring></argsstring>
        <name>opers_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>tac</computeroutput> stands for Three-Address Code </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/ir_generation/codes.cc" line="14" column="1" bodyfile="/home/boki/KIVI/frontend/ir_generation/codes.cc" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d6c/codes_8cc_1a7df899243573620418516d56f2a9f9b8" prot="public" static="no">
        <type><ref refid="da/dea/classintermediate__representation_1_1generation__unit" kindref="compound">ir::generation_unit</ref></type>
        <definition>using gu =  ir::generation_unit</definition>
        <argsstring></argsstring>
        <name>gu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/ir_generation/codes.cc" line="15" column="1" bodyfile="/home/boki/KIVI/frontend/ir_generation/codes.cc" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d6c/codes_8cc_1acae8d16027df472cf07674d1f1a3fbfe" prot="public" static="no">
        <type><ref refid="d1/dc9/classintermediate__representation_1_1tac_1ac6e80d4ead8e52f5e5623acaa5b8fed9" kindref="member">ir::tac::type</ref></type>
        <definition>using tac_type =  ir::tac::type</definition>
        <argsstring></argsstring>
        <name>tac_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/ir_generation/codes.cc" line="16" column="1" bodyfile="/home/boki/KIVI/frontend/ir_generation/codes.cc" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the &quot;constructors&quot; for all concrete TAC&apos;s. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/db5/ir__code_8hh" kindref="compound">ir_code.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/dcd/generation__unit_8hh" kindref="compound">generation_unit.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d5/d90/namespaceintermediate__representation" kindref="compound">ir</ref><sp/>=<sp/><ref refid="d5/d90/namespaceintermediate__representation" kindref="compound">intermediate_representation</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref><sp/>=<sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac_1abfcc782036a2cfe2a8fdbded6c4c95a6" kindref="member">ir::tac::operands_type</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit" kindref="compound">gu</ref><sp/>=<sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit" kindref="compound">ir::generation_unit</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1acae8d16027df472cf07674d1f1a3fbfe" kindref="member">tac_type</ref><sp/>=<sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac_1ac6e80d4ead8e52f5e5623acaa5b8fed9" kindref="member">ir::tac::type</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="d5/d90/namespaceintermediate__representation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d5/d90/namespaceintermediate__representation" kindref="compound">intermediate_representation</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1aaf7c929d7855d1d47427dbbee47b8985" kindref="member">gu::tac_nop</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Nop<sp/>});</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1ade9b9cbec5f857638fd7a952ee4e05fb" kindref="member">gu::tac_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ident_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Init,<sp/>operands,<sp/>0,<sp/>ident_name<sp/>});</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1aa88fe2248fd95fa2ac3ff4544cf74e8b" kindref="member">gu::tac_add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Add,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1ac3e33f0a16025253d43dc01f6b72342f" kindref="member">gu::tac_neg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Negate,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1aa08ddc7a07d78a52302bf242c63ddf3a" kindref="member">gu::tac_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Copy,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1a7a05a7aef970731a32c63268a51f436a" kindref="member">gu::tac_read</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Read,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1a55a25da3a56d406dafe7f72be078d2f8" kindref="member">gu::tac_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Write,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1a65acd96e3bffcf60188a63ccd5b03742" kindref="member">gu::tac_eq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/><ref refid="d3/d08/namespaceCatch_1_1Matchers_1af8af7dfc338335ed4c788cb1b37fc59f" kindref="member">tac_type::Equals</ref>,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1a490d3f9da0268354cdc6ce1d16d19b9b" kindref="member">gu::tac_ifnz</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::IfNotZero<sp/>});</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1a0358f1cad6154db1725d3ba8cd69d79e" kindref="member">gu::tac_fcall</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::FunctionCall,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>*</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dea/classintermediate__representation_1_1generation__unit_1a63c67860335b5c270955f6a4f5370986" kindref="member">gu::tac_return</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d6c/codes_8cc_1a64dee6b451fc588a53deaff3503d3f61" kindref="member">opers_type</ref>&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>define_tac(<ref refid="d1/dc9/classintermediate__representation_1_1tac" kindref="compound">tac</ref>{<sp/>tac_type::Return,<sp/>operands<sp/>});</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/boki/KIVI/frontend/ir_generation/codes.cc"/>
  </compounddef>
</doxygen>
