<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d1/d9f/classsyntax__analyzer_1_1identifier" kind="class" language="C++" prot="public">
    <compoundname>syntax_analyzer::identifier</compoundname>
    <basecompoundref refid="df/d98/classsyntax__analyzer_1_1syntactic__structure" prot="public" virt="non-virtual">syntax_analyzer::syntactic_structure</basecompoundref>
    <includes refid="d9/d1c/syntax_8hh" local="no">syntax.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177" prot="public" static="no" strong="yes">
        <type></type>
        <name>type</name>
        <enumvalue id="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177a86408593c34af77fdd90df932f8b5261" prot="public">
          <name>Function</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177a83f499a540b1323009c200d6f8cc9396" prot="public">
          <name>Parameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177a509820290d57f333403f490dde7316f4" prot="public">
          <name>Local</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encountered identifiers may be used in different context, so in order to be aware of that, an additional classification is required. The following enumeration keeps track of the specific type of encountered identifier which may be used in different context. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="48" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="49" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d1/d9f/classsyntax__analyzer_1_1identifier_1ab9c5b13020e083fabc25a1a257a1f626" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177" kindref="member">identifier::type</ref></type>
        <definition>identifier::type syntax_analyzer::identifier::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <initializer>= <ref refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177aec0fc0100c4fc1ce4eea230c3dc10360" kindref="member">identifier::type::Undefined</ref></initializer>
        <briefdescription>
<para>The type of identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="58" column="18" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9f/classsyntax__analyzer_1_1identifier_1a043bebc0275159a71eff4ccb88d3390e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string syntax_analyzer::identifier::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>The name of identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="61" column="13" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9f/classsyntax__analyzer_1_1identifier_1a5243781342ab151f4df44f20459b5bb6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int syntax_analyzer::identifier::m_index_within</definition>
        <argsstring></argsstring>
        <name>m_index_within</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Since the identifier is stored as an operand in an operand list we keep the index within this list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="65" column="5" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d9f/classsyntax__analyzer_1_1identifier_1a522e7902a4f9ef2d1392ec1dddba2fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>syntax_analyzer::identifier::identifier</definition>
        <argsstring>()=default</argsstring>
        <name>identifier</name>
        <briefdescription>
<para>Default construction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9f/classsyntax__analyzer_1_1identifier_1ab8a7777149eb1d33a0fa874ebda0842f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>syntax_analyzer::identifier::identifier</definition>
        <argsstring>(identifier::type type, std::string &amp;&amp;name, int index=0)</argsstring>
        <name>identifier</name>
        <param>
          <type><ref refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177" kindref="member">identifier::type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Parameter construction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="72" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.cc" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9f/classsyntax__analyzer_1_1identifier_1a58f7df029937e3a1a760d2611b060b0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool syntax_analyzer::identifier::operator==</definition>
        <argsstring>(const identifier &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d1/d9f/classsyntax__analyzer_1_1identifier" kindref="compound">identifier</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equals operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="76" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9f/classsyntax__analyzer_1_1identifier_1adf4c9b09133fdcb3064e992ff1e052d3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177" kindref="member">identifier::type</ref></type>
        <definition>identifier::type syntax_analyzer::identifier::get_type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="84" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9f/classsyntax__analyzer_1_1identifier_1a98286bce4809f7d460bb6075c5e20668" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int syntax_analyzer::identifier::index</definition>
        <argsstring>() const noexcept</argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="90" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9f/classsyntax__analyzer_1_1identifier_1ae1236ed1f3460df700ecfdcba95f2a25" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; syntax_analyzer::identifier::name</definition>
        <argsstring>() const noexcept</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="96" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9f/classsyntax__analyzer_1_1identifier_1a3d3f133a504c3ba9f639a400d6d820bc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string syntax_analyzer::identifier::to_string</definition>
        <argsstring>() const noexcept</argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="102" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="102" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The following data structure describes a valid identifier encountered during parsing of a source file. Check <computeroutput>identifier_class</computeroutput> for more information about the different types of identifiers. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>syntax_analyzer::identifier</label>
        <link refid="d1/d9f/classsyntax__analyzer_1_1identifier"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>syntax_analyzer::syntactic_structure</label>
        <link refid="df/d98/classsyntax__analyzer_1_1syntactic__structure"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>syntax_analyzer::identifier</label>
        <link refid="d1/d9f/classsyntax__analyzer_1_1identifier"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>syntax_analyzer::syntactic_structure</label>
        <link refid="df/d98/classsyntax__analyzer_1_1syntactic__structure"/>
      </node>
    </collaborationgraph>
    <location file="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" line="38" column="1" bodyfile="/home/boki/.tmp/kivi/frontend/parser/syntax.hh" bodystart="39" bodyend="106"/>
    <listofallmembers>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1adf4c9b09133fdcb3064e992ff1e052d3" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>get_type</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a522e7902a4f9ef2d1392ec1dddba2fde" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>identifier</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1ab8a7777149eb1d33a0fa874ebda0842f" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>identifier</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a98286bce4809f7d460bb6075c5e20668" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>index</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a5243781342ab151f4df44f20459b5bb6" prot="private" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>m_index_within</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a043bebc0275159a71eff4ccb88d3390e" prot="private" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>m_name</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1ab9c5b13020e083fabc25a1a257a1f626" prot="private" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>m_type</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1ae1236ed1f3460df700ecfdcba95f2a25" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>name</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a58f7df029937e3a1a760d2611b060b0a" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>operator==</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a3d3f133a504c3ba9f639a400d6d820bc" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>to_string</name></member>
      <member refid="d1/d9f/classsyntax__analyzer_1_1identifier_1a37c2039743baa4aaa82f8ad66bba9177" prot="public" virt="non-virtual"><scope>syntax_analyzer::identifier</scope><name>type</name></member>
      <member refid="df/d98/classsyntax__analyzer_1_1syntactic__structure_1a0363c2b7180f7fce96c6e065d3b2bed6" prot="public" virt="virtual"><scope>syntax_analyzer::identifier</scope><name>~syntactic_structure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
