<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dd/d45/md_gh_pages_dev_known_bugs" kind="page">
    <compoundname>md_gh_pages_dev_known_bugs</compoundname>
    <title>Known bugs</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para>
<para>There are a bunch of bugs which are found, but are not highest priority and therefore are not fixed yet. Here we list all them.</para>
<para><hruler/>
</para>
<sect3 id="dd/d45/md_gh_pages_dev_known_bugs_1autotoc_md45">
<title>Infinite loop when comma after last function&apos;s parameter</title>
<para><orderedlist>
<listitem><para>Example: <programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">foo<sp/>n,:<sp/>{</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>a<sp/>=<sp/>3;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
</listitem></orderedlist>
</para>
</sect3>
<sect3 id="dd/d45/md_gh_pages_dev_known_bugs_1autotoc_md46">
<title>Cannot catch syntax errors from bison</title>
<para><heading level="5">Examples</heading>
</para>
<para><orderedlist>
<listitem><para><lsquo/>syntax error, unexpected <rsquo/>,&apos;, expecting &apos;:&apos;`</para>
</listitem></orderedlist>
</para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">foo<sp/>,n:<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>a<sp/>=<sp/>3;<sp/></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting><orderedlist>
<listitem><para><computeroutput>syntax error, unexpected END</computeroutput>. Notice there is no new line after the statement, so the <computeroutput>}</computeroutput> is included in the comment. However, the compiler expects the closing bracket symbol at the end of the function and as a result unexpected end syntax error is generated.</para>
</listitem></orderedlist>
</para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">foo<sp/>{<sp/>//auto<sp/>a<sp/>=<sp/>3;<sp/>}</highlight></codeline>
</programlisting></para>
<para><orderedlist>
<listitem><para>Cannot catch if while loops occur during the parsing. That should be done as a test. Checkout point 1. </para>
</listitem></orderedlist>
</para>
</sect3>
    </detaileddescription>
    <location file="gh-pages/dev/known_bugs.md"/>
  </compounddef>
</doxygen>
