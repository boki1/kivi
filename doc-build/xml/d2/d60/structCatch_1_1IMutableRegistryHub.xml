<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/d60/structCatch_1_1IMutableRegistryHub" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>Catch::IMutableRegistryHub</compoundname>
    <includes refid="df/dbf/catch2_8hpp" local="no">catch2.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1a759ca1e044e19f905fb4d306f1367193" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Catch::IMutableRegistryHub::~IMutableRegistryHub</definition>
        <argsstring>()</argsstring>
        <name>~IMutableRegistryHub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2975" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1a1c0ac202ac31ee9f88e8ff5cbac4b243" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IMutableRegistryHub::registerReporter</definition>
        <argsstring>(std::string const &amp;name, IReporterFactoryPtr const &amp;factory)=0</argsstring>
        <name>registerReporter</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d8/d39/namespaceCatch_1ad1b36ac40c2739e52fd453dcdddf0d09" kindref="member">IReporterFactoryPtr</ref> const &amp;</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2976" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1abd892a133f85581fd00ee75bb379ca56" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IMutableRegistryHub::registerListener</definition>
        <argsstring>(IReporterFactoryPtr const &amp;factory)=0</argsstring>
        <name>registerListener</name>
        <param>
          <type><ref refid="d8/d39/namespaceCatch_1ad1b36ac40c2739e52fd453dcdddf0d09" kindref="member">IReporterFactoryPtr</ref> const &amp;</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2977" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1a11b85c6744d88c9f83fe16ad4a8dd451" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IMutableRegistryHub::registerTest</definition>
        <argsstring>(TestCase const &amp;testInfo)=0</argsstring>
        <name>registerTest</name>
        <param>
          <type><ref refid="d6/df4/classCatch_1_1TestCase" kindref="compound">TestCase</ref> const &amp;</type>
          <declname>testInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2978" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1ae6825365102693cf7707db022a2c2b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IMutableRegistryHub::registerTranslator</definition>
        <argsstring>(const IExceptionTranslator *translator)=0</argsstring>
        <name>registerTranslator</name>
        <param>
          <type>const <ref refid="d9/d8c/structCatch_1_1IExceptionTranslator" kindref="compound">IExceptionTranslator</ref> *</type>
          <declname>translator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2979" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1abf2e386b6f94f615719ada711adbf822" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IMutableRegistryHub::registerTagAlias</definition>
        <argsstring>(std::string const &amp;alias, std::string const &amp;tag, SourceLineInfo const &amp;lineInfo)=0</argsstring>
        <name>registerTagAlias</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>alias</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="dc/d2b/structCatch_1_1SourceLineInfo" kindref="compound">SourceLineInfo</ref> const &amp;</type>
          <declname>lineInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2980" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1a72a7d5386851ac3200f8da794a009c86" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IMutableRegistryHub::registerStartupException</definition>
        <argsstring>() noexcept=0</argsstring>
        <name>registerStartupException</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2981" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/structCatch_1_1IMutableRegistryHub_1ab91c4fd63eeb0efd9bfb270e8bbd231d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d4/ddb/structCatch_1_1IMutableEnumValuesRegistry" kindref="compound">IMutableEnumValuesRegistry</ref> &amp;</type>
        <definition>virtual IMutableEnumValuesRegistry&amp; Catch::IMutableRegistryHub::getMutableEnumValuesRegistry</definition>
        <argsstring>()=0</argsstring>
        <name>getMutableEnumValuesRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2982" column="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="2974" column="5" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="2974" bodyend="2983"/>
    <listofallmembers>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1ab91c4fd63eeb0efd9bfb270e8bbd231d" prot="public" virt="pure-virtual"><scope>Catch::IMutableRegistryHub</scope><name>getMutableEnumValuesRegistry</name></member>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1abd892a133f85581fd00ee75bb379ca56" prot="public" virt="pure-virtual"><scope>Catch::IMutableRegistryHub</scope><name>registerListener</name></member>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1a1c0ac202ac31ee9f88e8ff5cbac4b243" prot="public" virt="pure-virtual"><scope>Catch::IMutableRegistryHub</scope><name>registerReporter</name></member>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1a72a7d5386851ac3200f8da794a009c86" prot="public" virt="pure-virtual"><scope>Catch::IMutableRegistryHub</scope><name>registerStartupException</name></member>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1abf2e386b6f94f615719ada711adbf822" prot="public" virt="pure-virtual"><scope>Catch::IMutableRegistryHub</scope><name>registerTagAlias</name></member>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1a11b85c6744d88c9f83fe16ad4a8dd451" prot="public" virt="pure-virtual"><scope>Catch::IMutableRegistryHub</scope><name>registerTest</name></member>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1ae6825365102693cf7707db022a2c2b49" prot="public" virt="pure-virtual"><scope>Catch::IMutableRegistryHub</scope><name>registerTranslator</name></member>
      <member refid="d2/d60/structCatch_1_1IMutableRegistryHub_1a759ca1e044e19f905fb4d306f1367193" prot="public" virt="virtual"><scope>Catch::IMutableRegistryHub</scope><name>~IMutableRegistryHub</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
