<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher" kind="struct" language="C++" prot="public">
    <compoundname>Catch::Matchers::StdString::RegexMatcher</compoundname>
    <basecompoundref refid="d8/d94/structCatch_1_1Matchers_1_1Impl_1_1MatcherBase" prot="public" virt="non-virtual">Catch::Matchers::Impl::MatcherBase&lt; std::string &gt;</basecompoundref>
    <includes refid="df/dbf/catch2_8hpp" local="no">catch2.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1af1020e7266bcfa76ffad011ff89ea14e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Catch::Matchers::StdString::RegexMatcher::m_regex</definition>
        <argsstring></argsstring>
        <name>m_regex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="3577" column="25" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="3577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1afb5fb3d3734c4e882162b51559d09bd4" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d1d/structCatch_1_1CaseSensitive_1aad49d3aee2d97066642fffa919685c6a" kindref="member">CaseSensitive::Choice</ref></type>
        <definition>CaseSensitive::Choice Catch::Matchers::StdString::RegexMatcher::m_caseSensitivity</definition>
        <argsstring></argsstring>
        <name>m_caseSensitivity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="3578" column="35" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="3578" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1ab914deb885fe25558c41ab368c6b3916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::Matchers::StdString::RegexMatcher::RegexMatcher</definition>
        <argsstring>(std::string regex, CaseSensitive::Choice caseSensitivity)</argsstring>
        <name>RegexMatcher</name>
        <param>
          <type>std::string</type>
          <declname>regex</declname>
        </param>
        <param>
          <type><ref refid="d3/d1d/structCatch_1_1CaseSensitive_1aad49d3aee2d97066642fffa919685c6a" kindref="member">CaseSensitive::Choice</ref></type>
          <declname>caseSensitivity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="3572" column="13"/>
      </memberdef>
      <memberdef kind="function" id="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1aa8e61adccabb2f36133029301f6b8f4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Catch::Matchers::StdString::RegexMatcher::match</definition>
        <argsstring>(std::string const &amp;matchee) const override</argsstring>
        <name>match</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>matchee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="3573" column="18"/>
      </memberdef>
      <memberdef kind="function" id="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1a1f788cd5258c987e5043f6c7f43adeb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string Catch::Matchers::StdString::RegexMatcher::describe</definition>
        <argsstring>() const override</argsstring>
        <name>describe</name>
        <reimplements refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase_1a91d3a907dbfcbb596077df24f6e11fe2">describe</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="3574" column="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Catch::Matchers::StdString::RegexMatcher</label>
        <link refid="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="d8/d94/structCatch_1_1Matchers_1_1Impl_1_1MatcherBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase"/>
      </node>
      <node id="4">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="de/da3/structCatch_1_1Matchers_1_1Impl_1_1MatcherMethod"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Catch::Matchers::StdString::RegexMatcher</label>
        <link refid="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="d8/d94/structCatch_1_1Matchers_1_1Impl_1_1MatcherBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase"/>
      </node>
      <node id="4">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="de/da3/structCatch_1_1Matchers_1_1Impl_1_1MatcherMethod"/>
      </node>
    </collaborationgraph>
    <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="3571" column="9" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="3571" bodyend="3579"/>
    <listofallmembers>
      <member refid="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1a1f788cd5258c987e5043f6c7f43adeb9" prot="public" virt="virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>describe</name></member>
      <member refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase_1a951095c462657e7097a9a6dc4dde813f" prot="protected" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>m_cachedToString</name></member>
      <member refid="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1afb5fb3d3734c4e882162b51559d09bd4" prot="private" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>m_caseSensitivity</name></member>
      <member refid="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1af1020e7266bcfa76ffad011ff89ea14e" prot="private" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>m_regex</name></member>
      <member refid="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1aa8e61adccabb2f36133029301f6b8f4e" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>match</name></member>
      <member refid="de/da3/structCatch_1_1Matchers_1_1Impl_1_1MatcherMethod_1ae0920ff9e817acf08e1bb0cbcb044e30" prot="public" virt="pure-virtual" ambiguityscope="Catch::Matchers::Impl::MatcherBase::"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>match</name></member>
      <member refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase_1ab65764dc245d85e2b268d3be870b650a" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>MatcherUntypedBase</name></member>
      <member refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase_1a985fd3c3ffcc9f2e8dc7a330130040b0" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>MatcherUntypedBase</name></member>
      <member refid="d8/d94/structCatch_1_1Matchers_1_1Impl_1_1MatcherBase_1a5bb94bf2ff5c7ef73b7c11eb173bdf3b" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>operator!</name></member>
      <member refid="d8/d94/structCatch_1_1Matchers_1_1Impl_1_1MatcherBase_1aae4a9827601f6f26a52126e193d012de" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>operator&amp;&amp;</name></member>
      <member refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase_1a62668ccc47b64a9094dcb6413f9af80b" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>operator=</name></member>
      <member refid="d8/d94/structCatch_1_1Matchers_1_1Impl_1_1MatcherBase_1a5f8542b8f1567a6f9c65d0a6da7b679b" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>operator||</name></member>
      <member refid="da/d82/structCatch_1_1Matchers_1_1StdString_1_1RegexMatcher_1ab914deb885fe25558c41ab368c6b3916" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>RegexMatcher</name></member>
      <member refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase_1a5982c7c80ca71dfe2298babadad7a453" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>toString</name></member>
      <member refid="d9/d7c/classCatch_1_1Matchers_1_1Impl_1_1MatcherUntypedBase_1a853be93ce33f71b5abede38081c79e9d" prot="protected" virt="virtual"><scope>Catch::Matchers::StdString::RegexMatcher</scope><name>~MatcherUntypedBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
