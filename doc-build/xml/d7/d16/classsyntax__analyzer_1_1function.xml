<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d7/d16/classsyntax__analyzer_1_1function" kind="class" language="C++" prot="public">
    <compoundname>syntax_analyzer::function</compoundname>
    <basecompoundref refid="df/d98/classsyntax__analyzer_1_1syntactic__structure" prot="public" virt="non-virtual">syntax_analyzer::syntactic_structure</basecompoundref>
    <includes refid="d9/d1c/syntax_8hh" local="no">syntax.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d16/classsyntax__analyzer_1_1function_1a6bcbeea0fa4073ca57143c6d3a0f4694" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string syntax_analyzer::function::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>The name of the function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="264" column="13" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d16/classsyntax__analyzer_1_1function_1aa0ad845a4004d701405dc49287301295" prot="private" static="no" mutable="no">
        <type><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref></type>
        <definition>expression syntax_analyzer::function::m_body</definition>
        <argsstring></argsstring>
        <name>m_body</name>
        <briefdescription>
<para>The body of the function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="267" column="12" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d16/classsyntax__analyzer_1_1function_1a4e77733d8d8b12a5d96d9b5401797ac4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int syntax_analyzer::function::m_locals</definition>
        <argsstring></argsstring>
        <name>m_locals</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>The number of local variables defined in the function body. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="270" column="5" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d16/classsyntax__analyzer_1_1function_1ae3da6c960dc33b8bc3c6d1a77fb8d6c4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int syntax_analyzer::function::m_parameters</definition>
        <argsstring></argsstring>
        <name>m_parameters</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>The size of the parameter list of the function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="273" column="5" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="273" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a76ed86643aad3546e415ab49fb755364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>syntax_analyzer::function::function</definition>
        <argsstring>()=default</argsstring>
        <name>function</name>
        <briefdescription>
<para>Default construction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a67cf66fe8c24d2fa4b3dfa2ea56380cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>syntax_analyzer::function::function</definition>
        <argsstring>(std::string &amp;&amp;name, expression &amp;&amp;body, int locals=0, int parameters=0)</argsstring>
        <name>function</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref> &amp;&amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>int</type>
          <declname>locals</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>parameters</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="279" column="1" bodyfile="/home/boki/KIVI/frontend/parser/syntax.cc" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a38bbdf09fb961a1fe2107409a77cd4b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool syntax_analyzer::function::operator==</definition>
        <argsstring>(const function &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d7/d16/classsyntax__analyzer_1_1function" kindref="compound">function</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="281" column="6" bodyfile="/home/boki/KIVI/frontend/parser/syntax.cc" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a19ec89d996e2e45ac4d4fe019f4d8d69" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int syntax_analyzer::function::add_local</definition>
        <argsstring>() noexcept</argsstring>
        <name>add_local</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="284" column="5" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1afb2c91e99f85abdad45b3eed6df0df5e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int syntax_analyzer::function::add_param</definition>
        <argsstring>() noexcept</argsstring>
        <name>add_param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="289" column="5" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1ab2f1bf39aeb3b6058be56a296964c8a2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void syntax_analyzer::function::set_name</definition>
        <argsstring>(const std::string &amp;name) noexcept</argsstring>
        <name>set_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="294" column="6" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a4e230c086d2a4a39b62738384657a772" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void syntax_analyzer::function::set_body</definition>
        <argsstring>(expression &amp;&amp;expr) noexcept</argsstring>
        <name>set_body</name>
        <param>
          <type><ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref> &amp;&amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="298" column="6" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a7a9796bd1e10e31c8c4fdf008be99036" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; syntax_analyzer::function::name</definition>
        <argsstring>() const noexcept</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="304" column="1" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a17a1450fd90bb8905cb412cec09e6bf5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int syntax_analyzer::function::locals</definition>
        <argsstring>() const noexcept</argsstring>
        <name>locals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="310" column="1" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a0ac7ccaeeaab497da6f81990a7387cef" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int syntax_analyzer::function::parameters</definition>
        <argsstring>() const noexcept</argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="316" column="1" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1a7d4c53a7aa46c4b777f94b4d01188139" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="db/df3/classsyntax__analyzer_1_1expression" kindref="compound">expression</ref> &amp;</type>
        <definition>const expression&amp; syntax_analyzer::function::body</definition>
        <argsstring>() const noexcept</argsstring>
        <name>body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="322" column="1" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="d7/d16/classsyntax__analyzer_1_1function_1aecaf19243d4fb7651fb79f7af4a0f5e4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string syntax_analyzer::function::to_string</definition>
        <argsstring>() const noexcept</argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="328" column="1" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="328" bodyend="331"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The following data structure describes a valid function signature encountered during parsing of a source file. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>syntax_analyzer::function</label>
        <link refid="d7/d16/classsyntax__analyzer_1_1function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>syntax_analyzer::syntactic_structure</label>
        <link refid="df/d98/classsyntax__analyzer_1_1syntactic__structure"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>syntax_analyzer::function</label>
        <link refid="d7/d16/classsyntax__analyzer_1_1function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_body</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>syntax_analyzer::syntactic_structure</label>
        <link refid="df/d98/classsyntax__analyzer_1_1syntactic__structure"/>
      </node>
      <node id="3">
        <label>syntax_analyzer::expression</label>
        <link refid="db/df3/classsyntax__analyzer_1_1expression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/boki/KIVI/frontend/parser/syntax.hh" line="260" column="1" bodyfile="/home/boki/KIVI/frontend/parser/syntax.hh" bodystart="261" bodyend="332"/>
    <listofallmembers>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a19ec89d996e2e45ac4d4fe019f4d8d69" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>add_local</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1afb2c91e99f85abdad45b3eed6df0df5e" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>add_param</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a7d4c53a7aa46c4b777f94b4d01188139" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>body</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a76ed86643aad3546e415ab49fb755364" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>function</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a67cf66fe8c24d2fa4b3dfa2ea56380cd" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>function</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a17a1450fd90bb8905cb412cec09e6bf5" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>locals</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1aa0ad845a4004d701405dc49287301295" prot="private" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>m_body</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a4e77733d8d8b12a5d96d9b5401797ac4" prot="private" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>m_locals</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a6bcbeea0fa4073ca57143c6d3a0f4694" prot="private" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>m_name</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1ae3da6c960dc33b8bc3c6d1a77fb8d6c4" prot="private" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>m_parameters</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a7a9796bd1e10e31c8c4fdf008be99036" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>name</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a38bbdf09fb961a1fe2107409a77cd4b6" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>operator==</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a0ac7ccaeeaab497da6f81990a7387cef" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>parameters</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1a4e230c086d2a4a39b62738384657a772" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>set_body</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1ab2f1bf39aeb3b6058be56a296964c8a2" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>set_name</name></member>
      <member refid="d7/d16/classsyntax__analyzer_1_1function_1aecaf19243d4fb7651fb79f7af4a0f5e4" prot="public" virt="non-virtual"><scope>syntax_analyzer::function</scope><name>to_string</name></member>
      <member refid="df/d98/classsyntax__analyzer_1_1syntactic__structure_1a0363c2b7180f7fce96c6e065d3b2bed6" prot="public" virt="virtual"><scope>syntax_analyzer::function</scope><name>~syntactic_structure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
