<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d6/dab/namespaceCatch_1_1Detail" kind="namespace" language="C++">
    <compoundname>Catch::Detail</compoundname>
    <innerclass refid="d6/d6d/structCatch_1_1Detail_1_1EnumInfo" prot="public">Catch::Detail::EnumInfo</innerclass>
    <innerclass refid="d3/d27/classCatch_1_1Detail_1_1IsStreamInsertable" prot="public">Catch::Detail::IsStreamInsertable</innerclass>
    <innerclass refid="d2/da4/classCatch_1_1Detail_1_1Approx" prot="public">Catch::Detail::Approx</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d6/dab/namespaceCatch_1_1Detail_1a466775f4eec29ffef29ab334cd885136" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Catch::Detail::unprintableString</definition>
        <argsstring></argsstring>
        <name>unprintableString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1552" column="34" declfile="/home/boki/KIVI/extern/catch2/catch2.hpp" declline="1552" declcolumn="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1ac5d6c510e565ee5bddcc2236194ce29e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Catch::Detail::rawMemoryToString</definition>
        <argsstring>(const void *object, std::size_t size)</argsstring>
        <name>rawMemoryToString</name>
        <param>
          <type>const void *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1554" column="21" declfile="/home/boki/KIVI/extern/catch2/catch2.hpp" declline="1554" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1a371620ed524abfcae5c3772bf49b563a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string Catch::Detail::rawMemoryToString</definition>
        <argsstring>(const T &amp;object)</argsstring>
        <name>rawMemoryToString</name>
        <param>
          <type>const T &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1557" column="21" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="1557" bodyend="1559"/>
      </memberdef>
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1a242396de537c5176710d680cc9ca6b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string Catch::Detail::convertUnknownEnumToString</definition>
        <argsstring>(E e)</argsstring>
        <name>convertUnknownEnumToString</name>
        <param>
          <type>E</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1647" column="21" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="1647" bodyend="1649" declfile="/home/boki/KIVI/extern/catch2/catch2.hpp" declline="1575" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1a8e765acd7fc9eabdc34c786014cf02cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; !std::is_enum&lt; T &gt;::value &amp;&amp;!std::is_base_of&lt; std::exception, T &gt;::value, std::string &gt;::type</type>
        <definition>std::enable_if&lt; !std::is_enum&lt;T&gt;::value &amp;&amp; !std::is_base_of&lt;std::exception, T&gt;::value, std::string&gt;::type Catch::Detail::convertUnstreamable</definition>
        <argsstring>(T const &amp;)</argsstring>
        <name>convertUnstreamable</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1580" column="9" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="1580" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1aa5db7cae49c34a5e656be39ea52dbe22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; !std::is_enum&lt; T &gt;::value &amp;&amp;std::is_base_of&lt; std::exception, T &gt;::value, std::string &gt;::type</type>
        <definition>std::enable_if&lt; !std::is_enum&lt;T&gt;::value &amp;&amp; std::is_base_of&lt;std::exception, T&gt;::value, std::string&gt;::type Catch::Detail::convertUnstreamable</definition>
        <argsstring>(T const &amp;ex)</argsstring>
        <name>convertUnstreamable</name>
        <param>
          <type>T const &amp;</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1586" column="9" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="1586" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1abcc3139c8a868a369402e546045fbfb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; T &gt;::value, std::string &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt;T&gt;::value , std::string&gt;::type Catch::Detail::convertUnstreamable</definition>
        <argsstring>(T const &amp;value)</argsstring>
        <name>convertUnstreamable</name>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1593" column="9" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="1593" bodyend="1595"/>
      </memberdef>
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1af0ad48344ffd3f92f3568465248a9880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string Catch::Detail::stringify</definition>
        <argsstring>(const T &amp;e)</argsstring>
        <name>stringify</name>
        <param>
          <type>const T &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1642" column="21" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="1642" bodyend="1644"/>
      </memberdef>
      <memberdef kind="function" id="d6/dab/namespaceCatch_1_1Detail_1ac954cf158347a76a5b0c3f4fa9a9fa52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename Sentinel</type>
            <defval>InputIterator</defval>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string Catch::Detail::rangeToString</definition>
        <argsstring>(InputIterator first, Sentinel last)</argsstring>
        <name>rangeToString</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Sentinel</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1827" column="21" bodyfile="/home/boki/KIVI/extern/catch2/catch2.hpp" bodystart="1827" bodyend="1837"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/boki/KIVI/extern/catch2/catch2.hpp" line="1463" column="5"/>
  </compounddef>
</doxygen>
