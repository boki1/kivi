<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d0/d70/ir__code_8cc" kind="file" language="C++">
    <compoundname>ir_code.cc</compoundname>
    <includes refid="db/db5/ir__code_8hh" local="yes">ir_code.hh</includes>
    <incdepgraph>
      <node id="7">
        <label>variant</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="2">
        <label>ir_code.hh</label>
        <link refid="db/db5/ir__code_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/boki/KIVI/frontend/ir_generation/ir_code.cc</label>
        <link refid="d0/d70/ir__code_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string_view</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d5/d90/namespaceintermediate__representation">intermediate_representation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/db5/ir__code_8hh" kindref="compound">ir_code.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d5/d90/namespaceintermediate__representation" kindref="compound">intermediate_representation</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dc9/classintermediate__representation_1_1tac_1a284112578177c61aa2adbd894d199fe6" kindref="member">tac::tac</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d0a/namespaceCatch_1_1Generators_1a3c4989dd0dca44455f55484cedaa18da" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>operands_type&amp;<sp/>operands)<sp/>:<sp/>tac{<sp/>type::Init,<sp/>operands,<sp/><ref refid="d0/d0a/namespaceCatch_1_1Generators_1a3c4989dd0dca44455f55484cedaa18da" kindref="member">value</ref>,<sp/>str<sp/>}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>tac::tac(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tac_ptr&amp;<sp/>branch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>operands_type&amp;<sp/>operands)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_condition(branch),<sp/>m_operands(operands),<sp/>m_type(type::IfNotZero)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>tac::tac(tac::type<sp/><ref refid="dc/d6c/codes_8cc_1acae8d16027df472cf07674d1f1a3fbfe" kindref="member">tac_type</ref>,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tac::operands_type&amp;<sp/>operands<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>{}<sp/>*/</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d0a/namespaceCatch_1_1Generators_1a3c4989dd0dca44455f55484cedaa18da" kindref="member">value</ref><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>i<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>{}<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tac::tac_ptr&amp;<sp/>next<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>{<sp/>nullptr<sp/>}<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;tac_ptr&gt;&amp;<sp/>condition<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>{}<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_value{<sp/><ref refid="d0/d0a/namespaceCatch_1_1Generators_1a3c4989dd0dca44455f55484cedaa18da" kindref="member">value</ref><sp/>},<sp/>m_identifier{<sp/>i<sp/>},<sp/>m_next{<sp/>next<sp/>},<sp/>m_condition{<sp/>condition<sp/>},<sp/>m_operands{<sp/>operands<sp/>},<sp/>m_type{<sp/><ref refid="dc/d6c/codes_8cc_1acae8d16027df472cf07674d1f1a3fbfe" kindref="member">tac_type</ref><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>tac::tac(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;vregister_type&gt;&amp;<sp/>operands)<sp/>:<sp/>tac{<sp/>type::Nop,<sp/>operands<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>tac::tac(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>operands_type&amp;<sp/>operands)<sp/>:<sp/>m_identifier(),<sp/>m_operands(operands)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/boki/KIVI/frontend/ir_generation/ir_code.cc"/>
  </compounddef>
</doxygen>
